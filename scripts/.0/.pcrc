#alias paok="echo 'paokra ole'"

#if [ -z "$TMUX" ]; then
    #tmux attach -t pc || tmux new -s pc
#fi
menu () {
    echo $@ | fmt -1 | fzf
}

pc () {
    prefix=${HOME}/.0/
    script=$(find -L ~/.0 -name "*.sh" | awk '{ gsub("'${prefix}'","",$1); print $1 }'| fzf)
    window=$(echo $script | awk '{ gsub("/","-",$1); print $1 }' | awk '{ gsub(".sh","",$1); print $1 }')

    sessions=$(tmux ls -F "#S")
    windows=$(tmux lsw -t pc -F "#W")

    if [ -f ${prefix}${script} ]
    then
        if [ -z $(echo $sessions | grep -w pc) ]
        then
            tmux new -s pc -n ${window} -d "sh ${prefix}${script}"

        else
            if [ -z $(echo $windows | grep -w $window) ]
            then
                tmux new-window -t pc -n ${window} "sh ${prefix}${script}"
            fi
        fi
        tmux attach -t pc
        #tmux select-window -t pc:${session} -d 
    else
        tmux a -t pc || tmux new -s pc
    fi
}

pc_ () {
    prefix=${HOME}/.0/
    script=$(find -L ~/.0 -name "*.sh" | awk '{ gsub("'${prefix}'","",$1); print $1 }'| fzf)
    session=$(echo $script | awk '{ gsub("/","-",$1); print $1 }' | awk '{ gsub(".sh","",$1); print $1 }')

    if [ -f ${prefix}${script} ]
    then
        tmux a -t ${session} || tmux new -s ${session} "sh ${prefix}${script}"
    fi
}


press_enter () {
    echo "Press enter to continue."
    read dummy
}

# Preventing nested ranger instances
ranger() {
    if [ -z "$RANGER_LEVEL" ]; then
        /usr/bin/ranger "$@"
    else
        exit
    fi
}

# fzf dropdown list and not dropup
export FZF_DEFAULT_OPTS="--layout=reverse --height 40%"
